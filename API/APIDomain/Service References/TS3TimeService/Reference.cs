//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIDomain.TS3TimeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimezoneDateTimeResponse", Namespace="http://schemas.datacontract.org/2004/07/UWA.Service.Time.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimezoneDateTimeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LocalDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalDateTimeIsAmbiguousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalDateTimeIsDaylightSavingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalDateTimeIsInvalidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalTimezoneNameCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalTimezoneNameDaylightSavingsTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalTimezoneNameDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalTimezoneNameStandardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LocalTimezoneSupportsDaylightSavingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan LocalTimezoneUTCOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private APIDomain.TS3TimeService.TimezoneConversionResult ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ZuluDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationID {
            get {
                return this.CorrelationIDField;
            }
            set {
                if ((this.CorrelationIDField.Equals(value) != true)) {
                    this.CorrelationIDField = value;
                    this.RaisePropertyChanged("CorrelationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LocalDateTime {
            get {
                return this.LocalDateTimeField;
            }
            set {
                if ((this.LocalDateTimeField.Equals(value) != true)) {
                    this.LocalDateTimeField = value;
                    this.RaisePropertyChanged("LocalDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocalDateTimeIsAmbiguous {
            get {
                return this.LocalDateTimeIsAmbiguousField;
            }
            set {
                if ((this.LocalDateTimeIsAmbiguousField.Equals(value) != true)) {
                    this.LocalDateTimeIsAmbiguousField = value;
                    this.RaisePropertyChanged("LocalDateTimeIsAmbiguous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocalDateTimeIsDaylightSavingTime {
            get {
                return this.LocalDateTimeIsDaylightSavingTimeField;
            }
            set {
                if ((this.LocalDateTimeIsDaylightSavingTimeField.Equals(value) != true)) {
                    this.LocalDateTimeIsDaylightSavingTimeField = value;
                    this.RaisePropertyChanged("LocalDateTimeIsDaylightSavingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocalDateTimeIsInvalid {
            get {
                return this.LocalDateTimeIsInvalidField;
            }
            set {
                if ((this.LocalDateTimeIsInvalidField.Equals(value) != true)) {
                    this.LocalDateTimeIsInvalidField = value;
                    this.RaisePropertyChanged("LocalDateTimeIsInvalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalTimezoneNameCurrent {
            get {
                return this.LocalTimezoneNameCurrentField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalTimezoneNameCurrentField, value) != true)) {
                    this.LocalTimezoneNameCurrentField = value;
                    this.RaisePropertyChanged("LocalTimezoneNameCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalTimezoneNameDaylightSavingsTime {
            get {
                return this.LocalTimezoneNameDaylightSavingsTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalTimezoneNameDaylightSavingsTimeField, value) != true)) {
                    this.LocalTimezoneNameDaylightSavingsTimeField = value;
                    this.RaisePropertyChanged("LocalTimezoneNameDaylightSavingsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalTimezoneNameDisplay {
            get {
                return this.LocalTimezoneNameDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalTimezoneNameDisplayField, value) != true)) {
                    this.LocalTimezoneNameDisplayField = value;
                    this.RaisePropertyChanged("LocalTimezoneNameDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalTimezoneNameStandard {
            get {
                return this.LocalTimezoneNameStandardField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalTimezoneNameStandardField, value) != true)) {
                    this.LocalTimezoneNameStandardField = value;
                    this.RaisePropertyChanged("LocalTimezoneNameStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocalTimezoneSupportsDaylightSavingTime {
            get {
                return this.LocalTimezoneSupportsDaylightSavingTimeField;
            }
            set {
                if ((this.LocalTimezoneSupportsDaylightSavingTimeField.Equals(value) != true)) {
                    this.LocalTimezoneSupportsDaylightSavingTimeField = value;
                    this.RaisePropertyChanged("LocalTimezoneSupportsDaylightSavingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan LocalTimezoneUTCOffset {
            get {
                return this.LocalTimezoneUTCOffsetField;
            }
            set {
                if ((this.LocalTimezoneUTCOffsetField.Equals(value) != true)) {
                    this.LocalTimezoneUTCOffsetField = value;
                    this.RaisePropertyChanged("LocalTimezoneUTCOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public APIDomain.TS3TimeService.TimezoneConversionResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ZuluDateTime {
            get {
                return this.ZuluDateTimeField;
            }
            set {
                if ((this.ZuluDateTimeField.Equals(value) != true)) {
                    this.ZuluDateTimeField = value;
                    this.RaisePropertyChanged("ZuluDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimezoneConversionResult", Namespace="http://schemas.datacontract.org/2004/07/UWA.Service.Time.Business")]
    public enum TimezoneConversionResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyRequest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICAONotSpecified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeNotSpecified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICAODoesNotExist = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimezoneDoesNotExist = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeIsAmbiguous = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeDoesNotExist = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimezoneNotSet = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCRMContext = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLatitudeOrLongitude = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 2048,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SunriseSunsetResponse", Namespace="http://schemas.datacontract.org/2004/07/UWA.Service.Time.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SunriseSunsetResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private APIDomain.TS3TimeService.SunriseSunsetResult ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SunriseLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SunriseZuluField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SunsetLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SunsetZuluField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private APIDomain.TS3TimeService.ZenithTypes ZenithField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationID {
            get {
                return this.CorrelationIDField;
            }
            set {
                if ((this.CorrelationIDField.Equals(value) != true)) {
                    this.CorrelationIDField = value;
                    this.RaisePropertyChanged("CorrelationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public APIDomain.TS3TimeService.SunriseSunsetResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultDetail {
            get {
                return this.ResultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDetailField, value) != true)) {
                    this.ResultDetailField = value;
                    this.RaisePropertyChanged("ResultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SunriseLocal {
            get {
                return this.SunriseLocalField;
            }
            set {
                if ((this.SunriseLocalField.Equals(value) != true)) {
                    this.SunriseLocalField = value;
                    this.RaisePropertyChanged("SunriseLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SunriseZulu {
            get {
                return this.SunriseZuluField;
            }
            set {
                if ((this.SunriseZuluField.Equals(value) != true)) {
                    this.SunriseZuluField = value;
                    this.RaisePropertyChanged("SunriseZulu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SunsetLocal {
            get {
                return this.SunsetLocalField;
            }
            set {
                if ((this.SunsetLocalField.Equals(value) != true)) {
                    this.SunsetLocalField = value;
                    this.RaisePropertyChanged("SunsetLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SunsetZulu {
            get {
                return this.SunsetZuluField;
            }
            set {
                if ((this.SunsetZuluField.Equals(value) != true)) {
                    this.SunsetZuluField = value;
                    this.RaisePropertyChanged("SunsetZulu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public APIDomain.TS3TimeService.ZenithTypes Zenith {
            get {
                return this.ZenithField;
            }
            set {
                if ((this.ZenithField.Equals(value) != true)) {
                    this.ZenithField = value;
                    this.RaisePropertyChanged("Zenith");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="SunriseSunsetResult", Namespace="http://schemas.datacontract.org/2004/07/UWA.Service.Time.Business")]
    public enum SunriseSunsetResult : long {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyRequest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICAORequired = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LatitudeRequired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LongitudeRequired = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidICAO = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLatitudeOrLongitude = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimezoneNotAvailable = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateRequired = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 1024,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZenithTypes", Namespace="http://schemas.datacontract.org/2004/07/UWA.Service.Time.DataContracts")]
    public enum ZenithTypes : long {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Official = 90833,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Civil = 96000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nautical = 102000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Astronomical = 108000,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.univ-wea.com/simpletime", ConfigurationName="TS3TimeService.ISimpleTimeService")]
    public interface ISimpleTimeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/ZuluToLocal", ReplyAction="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/ZuluToLocalResponse")]
        APIDomain.TS3TimeService.TimezoneDateTimeResponse ZuluToLocal(string datetime, string icao, System.Guid correlationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/ZuluToLocal", ReplyAction="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/ZuluToLocalResponse")]
        System.Threading.Tasks.Task<APIDomain.TS3TimeService.TimezoneDateTimeResponse> ZuluToLocalAsync(string datetime, string icao, System.Guid correlationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/LocalToZulu", ReplyAction="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/LocalToZuluResponse")]
        APIDomain.TS3TimeService.TimezoneDateTimeResponse LocalToZulu(string datetime, string icao, System.Guid correlationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/LocalToZulu", ReplyAction="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/LocalToZuluResponse")]
        System.Threading.Tasks.Task<APIDomain.TS3TimeService.TimezoneDateTimeResponse> LocalToZuluAsync(string datetime, string icao, System.Guid correlationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/GetSunriseSunsetICAO", ReplyAction="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/GetSunriseSunsetICAORes" +
            "ponse")]
        APIDomain.TS3TimeService.SunriseSunsetResponse GetSunriseSunsetICAO(string datetime, string icao, System.Guid correlationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/GetSunriseSunsetICAO", ReplyAction="http://schemas.univ-wea.com/simpletime/ISimpleTimeService/GetSunriseSunsetICAORes" +
            "ponse")]
        System.Threading.Tasks.Task<APIDomain.TS3TimeService.SunriseSunsetResponse> GetSunriseSunsetICAOAsync(string datetime, string icao, System.Guid correlationID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleTimeServiceChannel : APIDomain.TS3TimeService.ISimpleTimeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleTimeServiceClient : System.ServiceModel.ClientBase<APIDomain.TS3TimeService.ISimpleTimeService>, APIDomain.TS3TimeService.ISimpleTimeService {
        
        public SimpleTimeServiceClient() {
        }
        
        public SimpleTimeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleTimeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleTimeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleTimeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public APIDomain.TS3TimeService.TimezoneDateTimeResponse ZuluToLocal(string datetime, string icao, System.Guid correlationID) {
            return base.Channel.ZuluToLocal(datetime, icao, correlationID);
        }
        
        public System.Threading.Tasks.Task<APIDomain.TS3TimeService.TimezoneDateTimeResponse> ZuluToLocalAsync(string datetime, string icao, System.Guid correlationID) {
            return base.Channel.ZuluToLocalAsync(datetime, icao, correlationID);
        }
        
        public APIDomain.TS3TimeService.TimezoneDateTimeResponse LocalToZulu(string datetime, string icao, System.Guid correlationID) {
            return base.Channel.LocalToZulu(datetime, icao, correlationID);
        }
        
        public System.Threading.Tasks.Task<APIDomain.TS3TimeService.TimezoneDateTimeResponse> LocalToZuluAsync(string datetime, string icao, System.Guid correlationID) {
            return base.Channel.LocalToZuluAsync(datetime, icao, correlationID);
        }
        
        public APIDomain.TS3TimeService.SunriseSunsetResponse GetSunriseSunsetICAO(string datetime, string icao, System.Guid correlationID) {
            return base.Channel.GetSunriseSunsetICAO(datetime, icao, correlationID);
        }
        
        public System.Threading.Tasks.Task<APIDomain.TS3TimeService.SunriseSunsetResponse> GetSunriseSunsetICAOAsync(string datetime, string icao, System.Guid correlationID) {
            return base.Channel.GetSunriseSunsetICAOAsync(datetime, icao, correlationID);
        }
    }
}
